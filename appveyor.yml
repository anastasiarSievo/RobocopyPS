image:
  - Visual Studio 2019

skip_commits:
  message: /updated README.*|update README.*s/

install:
    - ps: |
        Write-Host "PowerShell Version:" $PSVersionTable.PSVersion.tostring()
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        .\build.ps1

build: false

test_script:
   - ps: Write-host "Operating System: $((Get-WmiObject -class Win32_OperatingSystem).Caption)"
   - ps: $version = Get-Command robocopy; Write-Host "Robocopy version: $($version.version)"
   - ps: $res = Invoke-Pester -Path ".\Tests" -OutputFormat NUnitXml -OutputFile TestsResults.xml -PassThru
   - ps: (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestsResults.xml))
   - ps: if ($res.FailedCount -gt 0) { throw "$($res.FailedCount) tests failed."}
   - ps: $result = Invoke-ScriptAnalyzer -Path .\RobocopyPS\* -Settings .\tests\CompabilitySettings.psd1 -Severity Warning
   - ps: if ($result.count -gt 0) { $result ; throw 'ScriptAnalyzer tests failed'}
   - pwsh: Write-Host "PowerShell Version:" $PSVersionTable.PSVersion.tostring()
   - pwsh: $res = Invoke-Pester -Path ".\Tests" -OutputFormat NUnitXml -OutputFile TestsResults.xml -PassThru
   - pwsh: (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestsResults.xml))
   - pwsh: if ($res.FailedCount -gt 0) { throw "$($res.FailedCount) tests failed."}
